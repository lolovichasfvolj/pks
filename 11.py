# -*- coding: utf-8 -*-
"""11

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1BWmMh5Br53qIZ_9emn0evJFIMv6o_Y3Q
"""

import pygame
import random

# Инициализация Pygame
pygame.init()

# Размеры игрового поля
WIDTH, HEIGHT = 800, 600
screen = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("Звездолёт и кометы")

# Цвета
WHITE = (255, 255, 255)
BLACK = (0, 0, 0)
RED = (255, 0, 0)
GREEN = (0, 255, 0)

# Класс звездолёта
class Spaceship:
    def __init__(self):
        self.image = pygame.Surface((50, 50))
        self.image.fill(GREEN)
        self.rect = self.image.get_rect()
        self.rect.center = (WIDTH // 2, HEIGHT - 50)
        self.speed = 5

    def move(self, dx, dy):
        self.rect.x += dx
        self.rect.y += dy
        if self.rect.left < 0:
            self.rect.left = 0
        if self.rect.right > WIDTH:
            self.rect.right = WIDTH
        if self.rect.top < 0:
            self.rect.top = 0
        if self.rect.bottom > HEIGHT:
            self.rect.bottom = HEIGHT

    def draw(self, screen):
        screen.blit(self.image, self.rect)

# Класс кометы
class Comet:
    def __init__(self):
        self.image = pygame.Surface((30, 30))
        self.image.fill(RED)
        self.rect = self.image.get_rect()
        self.rect.x = random.randint(0, WIDTH - self.rect.width)
        self.rect.y = random.randint(-100, -40)
        self.speed = random.randint(3, 7)

    def update(self):
        self.rect.y += self.speed
        if self.rect.top > HEIGHT:
            self.rect.x = random.randint(0, WIDTH - self.rect.width)
            self.rect.y = random.randint(-100, -40)
            self.speed = random.randint(3, 7)

    def draw(self, screen):
        screen.blit(self.image, self.rect)

# Класс ракеты
class Rocket:
    def __init__(self, x, y):
        self.image = pygame.Surface((10, 20))
        self.image.fill(WHITE)
        self.rect = self.image.get_rect()
        self.rect.center = (x, y)
        self.speed = 10
        self.active = True

    def update(self):
        self.rect.y -= self.speed
        if self.rect.bottom < 0:
            self.active = False

    def draw(self, screen):
        screen.blit(self.image, self.rect)

# Инициализация объектов
spaceship = Spaceship()
comets = [Comet() for _ in range(5)]
rockets = []
score = 0

# Основной игровой цикл
running = True
clock = pygame.time.Clock()
comet_timer = pygame.time.get_ticks()

while running:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
        elif event.type == pygame.KEYDOWN:
            if event.key == pygame.K_SPACE and len(rockets) < 3:
                rockets.append(Rocket(spaceship.rect.centerx, spaceship.rect.top))

    keys = pygame.key.get_pressed()
    if keys[pygame.K_LEFT]:
        spaceship.move(-spaceship.speed, 0)
    if keys[pygame.K_RIGHT]:
        spaceship.move(spaceship.speed, 0)
    if keys[pygame.K_UP]:
        spaceship.move(0, -spaceship.speed)
    if keys[pygame.K_DOWN]:
        spaceship.move(0, spaceship.speed)

    # Обновление комет
    if pygame.time.get_ticks() - comet_timer > 2000:
        comets.append(Comet())
        comet_timer = pygame.time.get_ticks()

    for comet in comets:
        comet.update()

    # Обновление ракет
    for rocket in rockets:
        rocket.update()

    # Проверка столкновений
    for rocket in rockets:
        if rocket.active:
            for comet in comets:
                if rocket.rect.colliderect(comet.rect):
                    rocket.active = False
                    comets.remove(comet)
                    score += 1
                    break

    # Удаление неактивных ракет
    rockets = [rocket for rocket in rockets if rocket.active]

    # Отрисовка
    screen.fill(BLACK)
    spaceship.draw(screen)
    for comet in comets:
        comet.draw(screen)
    for rocket in rockets:
        rocket.draw(screen)

    # Отображение счёта
    font = pygame.font.Font(None, 36)
    score_text = font.render(f"Score: {score}", True, WHITE)
    screen.blit(score_text, (10, 10))

    pygame.display.flip()
    clock.tick(60)

pygame.quit()